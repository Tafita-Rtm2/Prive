const axios = require('axios');
const fs = require('fs');
const path = require('path');

module.exports = {
  name: 'image-generator',
  description: 'G√©n√®re une image √† partir d\'un prompt et envoie le r√©sultat.',
  author: 'Deku (API Image Generator)',
  async execute(senderId, args, pageAccessToken, sendMessage) {
    const prompt = args.join(' ');

    if (!prompt) {
      return sendMessage(senderId, { text: "Veuillez entrer un prompt valide pour g√©n√©rer une image." }, pageAccessToken);
    }

    try {
      // Envoyer un message indiquant que l'image est en cours de g√©n√©ration
      await sendMessage(senderId, { text: 'üñåÔ∏è G√©n√©ration de votre image en cours‚è≥...\n\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚òÖ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ' }, pageAccessToken);

      // Appel √† l'API pour g√©n√©rer l'image
      const apiUrl = `https://joshweb.click/api/flux?prompt=${encodeURIComponent(prompt)}&model=4`;
      const response = await axios.get(apiUrl, { responseType: 'stream' }); // R√©cup√©rer l'image en tant que flux

      // Chemin temporaire pour enregistrer l'image
      const tempImagePath = path.join(__dirname, `temp-${Date.now()}.jpg`);

      // Enregistrer l'image localement
      const writer = fs.createWriteStream(tempImagePath);
      response.data.pipe(writer);

      // Attendre la fin de l'√©criture de l'image
      await new Promise((resolve, reject) => {
        writer.on('finish', resolve);
        writer.on('error', reject);
      });

      // Envoyer l'image √† l'utilisateur
      const imagePayload = {
        attachment: {
          type: 'image',
          payload: {
            is_reusable: true,
            url: `file://${tempImagePath}`,
          },
        },
      };

      await sendMessage(senderId, imagePayload, pageAccessToken);

      // Supprimer le fichier temporaire apr√®s l'envoi
      fs.unlinkSync(tempImagePath);

    } catch (error) {
      console.error('Erreur lors de la g√©n√©ration de l\'image:', error);
      // Envoyer un message d'erreur
      await sendMessage(senderId, { text: 'D√©sol√©, une erreur est survenue lors de la g√©n√©ration de l\'image. Veuillez r√©essayer plus tard.' }, pageAccessToken);
    }
  },
};
