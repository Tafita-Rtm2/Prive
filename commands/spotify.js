const axios = require('axios');
const fs = require('fs');
const { sendMessage } = require('../handles/sendMessage');

// Lecture du token d'acc√®s pour Messenger
const token = fs.readFileSync('token.txt', 'utf8');

module.exports = {
  name: 'imagine',
  description: 'G√©n√®re une image bas√©e sur un prompt utilisateur via Messenger.',
  author: 'Tata',
  usage: 'imagine [description de l\'image]',

  async execute(senderId, args) {
    const pageAccessToken = token;
    const prompt = args.join(' ').trim();

    // V√©rifie que l'utilisateur a bien fourni un prompt
    if (!prompt) {
      return await sendMessage(
        senderId,
        { text: '‚ùå Veuillez fournir une description pour g√©n√©rer une image.' },
        pageAccessToken
      );
    }

    try {
      // Notifie l'utilisateur que l'image est en cours de g√©n√©ration
      await sendMessage(
        senderId,
        { text: 'üé® G√©n√©ration de votre image en cours... Merci de patienter un moment ! ü§©' },
        pageAccessToken
      );

      // Appel √† l'API pour g√©n√©rer l'image
      const apiUrl = `https://joshweb.click/api/flux?prompt=${encodeURIComponent(prompt)}&model=4`;
      const response = await axios.get(apiUrl);

      // V√©rifie si l'API retourne une URL valide
      if (response.status === 200 && response.data && response.data.url) {
        const imageUrl = response.data.url;

        // Envoie l'image g√©n√©r√©e √† l'utilisateur
        await sendMessage(
          senderId,
          {
            attachment: {
              type: 'image',
              payload: {
                url: imageUrl, // URL directe de l'image g√©n√©r√©e
                is_reusable: true,
              },
            },
          },
          pageAccessToken
        );
      } else {
        // Message en cas d'√©chec de g√©n√©ration
        await sendMessage(
          senderId,
          { text: '‚ùå √âchec de la g√©n√©ration de l\'image. Essayez un autre prompt.' },
          pageAccessToken
        );
      }
    } catch (error) {
      console.error('Erreur lors de la g√©n√©ration de l\'image :', error);

      // Message d'erreur en cas de probl√®me avec l'API
      await sendMessage(
        senderId,
        { text: '‚ùå Une erreur est survenue lors de la g√©n√©ration de l\'image. Veuillez r√©essayer plus tard.' },
        pageAccessToken
      );
    }
  },
};
