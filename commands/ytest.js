const axios = require('axios');

module.exports = {
  name: 'file',
  description: 'R√©sum√© les fichiers envoy√©s par l‚Äôutilisateur.',
  async execute(senderId, message, pageAccessToken, sendMessage) {
    try {
      // V√©rifiez si un fichier a √©t√© envoy√© dans le message
      if (message.attachments && message.attachments.length > 0) {
        const attachment = message.attachments[0];

        // V√©rifiez que l'attachement est un fichier
        if (attachment.type === 'file' && attachment.payload.url) {
          const fileUrl = attachment.payload.url;

          // Envoyer un message temporaire indiquant que le fichier est en cours de traitement
          await sendMessage(senderId, { text: "üìÑ Votre fichier est en cours d'analyse... ‚è≥" }, pageAccessToken);

          // Appel √† l'API pour r√©sumer le fichier
          const apiUrl = `https://ccprojectapis.ddns.net/api/aisum?link=${encodeURIComponent(fileUrl)}&id=12345`; // Ajoutez votre propre ID si n√©cessaire
          const response = await axios.get(apiUrl);

          // V√©rifiez la r√©ponse de l'API
          const summary = response.data.summary || "Je n'ai pas pu r√©sumer ce fichier.";

          // Envoyer le r√©sum√© √† l'utilisateur
          const formattedResponse = `‚ú® R√©sum√© du fichier :\n\n${summary}`;
          await sendMessage(senderId, { text: formattedResponse }, pageAccessToken);

        } else {
          // Si l'attachement n'est pas un fichier
          await sendMessage(senderId, { text: "‚ùå Je ne peux traiter que les fichiers de type docx, pdf ou txt." }, pageAccessToken);
        }
      } else {
        // Si aucun fichier n'a √©t√© d√©tect√©
        await sendMessage(senderId, { text: "‚ùå Aucun fichier d√©tect√©. Veuillez envoyer un fichier pour que je le r√©sume." }, pageAccessToken);
      }
    } catch (error) {
      console.error('Erreur lors de l‚Äôanalyse du fichier :', error);
      await sendMessage(senderId, { text: "‚ùå Une erreur est survenue pendant l'analyse du fichier. Veuillez r√©essayer." }, pageAccessToken);
    }
  }
};
